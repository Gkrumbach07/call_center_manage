{"ast":null,"code":"const Decoder = require('../../../decoder');\n\nconst {\n  parse: parseV1\n} = require('../v1/response');\n/**\n * CreateTopics Response (Version: 2) => throttle_time_ms [topic_errors]\n *   throttle_time_ms => INT32\n *   topic_errors => topic error_code error_message\n *     topic => STRING\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n */\n\n\nconst topicNameComparator = (a, b) => a.topic.localeCompare(b.topic);\n\nconst topicErrors = decoder => ({\n  topic: decoder.readString(),\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString()\n});\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData);\n  return {\n    throttleTime: decoder.readInt32(),\n    topicErrors: decoder.readArray(topicErrors).sort(topicNameComparator)\n  };\n};\n\nmodule.exports = {\n  decode,\n  parse: parseV1\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/createTopics/v2/response.js"],"names":["Decoder","require","parse","parseV1","topicNameComparator","a","b","topic","localeCompare","topicErrors","decoder","readString","errorCode","readInt16","errorMessage","decode","rawData","throttleTime","readInt32","readArray","sort","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,KAAK,EAAEC;AAAT,IAAqBF,OAAO,CAAC,gBAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMG,mBAAmB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBF,CAAC,CAACC,KAAxB,CAAtC;;AAEA,MAAME,WAAW,GAAGC,OAAO,KAAK;AAC9BH,EAAAA,KAAK,EAAEG,OAAO,CAACC,UAAR,EADuB;AAE9BC,EAAAA,SAAS,EAAEF,OAAO,CAACG,SAAR,EAFmB;AAG9BC,EAAAA,YAAY,EAAEJ,OAAO,CAACC,UAAR;AAHgB,CAAL,CAA3B;;AAMA,MAAMI,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAC9B,QAAMN,OAAO,GAAG,IAAIV,OAAJ,CAAYgB,OAAZ,CAAhB;AACA,SAAO;AACLC,IAAAA,YAAY,EAAEP,OAAO,CAACQ,SAAR,EADT;AAELT,IAAAA,WAAW,EAAEC,OAAO,CAACS,SAAR,CAAkBV,WAAlB,EAA+BW,IAA/B,CAAoChB,mBAApC;AAFR,GAAP;AAID,CAND;;AAQAiB,MAAM,CAACC,OAAP,GAAiB;AACfP,EAAAA,MADe;AAEfb,EAAAA,KAAK,EAAEC;AAFQ,CAAjB","sourcesContent":["const Decoder = require('../../../decoder')\nconst { parse: parseV1 } = require('../v1/response')\n\n/**\n * CreateTopics Response (Version: 2) => throttle_time_ms [topic_errors]\n *   throttle_time_ms => INT32\n *   topic_errors => topic error_code error_message\n *     topic => STRING\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n */\n\nconst topicNameComparator = (a, b) => a.topic.localeCompare(b.topic)\n\nconst topicErrors = decoder => ({\n  topic: decoder.readString(),\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  return {\n    throttleTime: decoder.readInt32(),\n    topicErrors: decoder.readArray(topicErrors).sort(topicNameComparator),\n  }\n}\n\nmodule.exports = {\n  decode,\n  parse: parseV1,\n}\n"]},"metadata":{},"sourceType":"script"}