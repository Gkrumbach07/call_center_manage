{"ast":null,"code":"const isInvalidOffset = require('./isInvalidOffset');\n\nconst {\n  keys,\n  assign\n} = Object;\n\nconst indexPartitions = (obj, {\n  partition,\n  offset\n}) => assign(obj, {\n  [partition]: offset\n});\n\nconst indexTopics = (obj, {\n  topic,\n  partitions\n}) => assign(obj, {\n  [topic]: partitions.reduce(indexPartitions, {})\n});\n\nmodule.exports = (consumerOffsets, topicOffsets) => {\n  const indexedConsumerOffsets = consumerOffsets.reduce(indexTopics, {});\n  const indexedTopicOffsets = topicOffsets.reduce(indexTopics, {});\n  return keys(indexedConsumerOffsets).map(topic => {\n    const partitions = indexedConsumerOffsets[topic];\n    return {\n      topic,\n      partitions: keys(partitions).map(partition => {\n        const offset = partitions[partition];\n        const resolvedOffset = isInvalidOffset(offset) ? indexedTopicOffsets[topic][partition] : offset;\n        return {\n          partition: Number(partition),\n          offset: resolvedOffset\n        };\n      })\n    };\n  });\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/consumer/offsetManager/initializeConsumerOffsets.js"],"names":["isInvalidOffset","require","keys","assign","Object","indexPartitions","obj","partition","offset","indexTopics","topic","partitions","reduce","module","exports","consumerOffsets","topicOffsets","indexedConsumerOffsets","indexedTopicOffsets","map","resolvedOffset","Number"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAmBC,MAAzB;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAM;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAN,KAAgCL,MAAM,CAACG,GAAD,EAAM;AAAE,GAACC,SAAD,GAAaC;AAAf,CAAN,CAA9D;;AACA,MAAMC,WAAW,GAAG,CAACH,GAAD,EAAM;AAAEI,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAN,KAClBR,MAAM,CAACG,GAAD,EAAM;AAAE,GAACI,KAAD,GAASC,UAAU,CAACC,MAAX,CAAkBP,eAAlB,EAAmC,EAAnC;AAAX,CAAN,CADR;;AAGAQ,MAAM,CAACC,OAAP,GAAiB,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAClD,QAAMC,sBAAsB,GAAGF,eAAe,CAACH,MAAhB,CAAuBH,WAAvB,EAAoC,EAApC,CAA/B;AACA,QAAMS,mBAAmB,GAAGF,YAAY,CAACJ,MAAb,CAAoBH,WAApB,EAAiC,EAAjC,CAA5B;AAEA,SAAOP,IAAI,CAACe,sBAAD,CAAJ,CAA6BE,GAA7B,CAAiCT,KAAK,IAAI;AAC/C,UAAMC,UAAU,GAAGM,sBAAsB,CAACP,KAAD,CAAzC;AACA,WAAO;AACLA,MAAAA,KADK;AAELC,MAAAA,UAAU,EAAET,IAAI,CAACS,UAAD,CAAJ,CAAiBQ,GAAjB,CAAqBZ,SAAS,IAAI;AAC5C,cAAMC,MAAM,GAAGG,UAAU,CAACJ,SAAD,CAAzB;AACA,cAAMa,cAAc,GAAGpB,eAAe,CAACQ,MAAD,CAAf,GACnBU,mBAAmB,CAACR,KAAD,CAAnB,CAA2BH,SAA3B,CADmB,GAEnBC,MAFJ;AAIA,eAAO;AAAED,UAAAA,SAAS,EAAEc,MAAM,CAACd,SAAD,CAAnB;AAAgCC,UAAAA,MAAM,EAAEY;AAAxC,SAAP;AACD,OAPW;AAFP,KAAP;AAWD,GAbM,CAAP;AAcD,CAlBD","sourcesContent":["const isInvalidOffset = require('./isInvalidOffset')\nconst { keys, assign } = Object\n\nconst indexPartitions = (obj, { partition, offset }) => assign(obj, { [partition]: offset })\nconst indexTopics = (obj, { topic, partitions }) =>\n  assign(obj, { [topic]: partitions.reduce(indexPartitions, {}) })\n\nmodule.exports = (consumerOffsets, topicOffsets) => {\n  const indexedConsumerOffsets = consumerOffsets.reduce(indexTopics, {})\n  const indexedTopicOffsets = topicOffsets.reduce(indexTopics, {})\n\n  return keys(indexedConsumerOffsets).map(topic => {\n    const partitions = indexedConsumerOffsets[topic]\n    return {\n      topic,\n      partitions: keys(partitions).map(partition => {\n        const offset = partitions[partition]\n        const resolvedOffset = isInvalidOffset(offset)\n          ? indexedTopicOffsets[topic][partition]\n          : offset\n\n        return { partition: Number(partition), offset: resolvedOffset }\n      }),\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}