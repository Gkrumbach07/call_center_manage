{"ast":null,"code":"const swapObject = require('../utils/swapObject');\n\nconst networkEvents = require('../network/instrumentationEvents');\n\nconst InstrumentationEventType = require('../instrumentation/eventType');\n\nconst producerType = InstrumentationEventType('producer');\nconst events = {\n  CONNECT: producerType('connect'),\n  DISCONNECT: producerType('disconnect'),\n  REQUEST: producerType(networkEvents.NETWORK_REQUEST),\n  REQUEST_TIMEOUT: producerType(networkEvents.NETWORK_REQUEST_TIMEOUT),\n  REQUEST_QUEUE_SIZE: producerType(networkEvents.NETWORK_REQUEST_QUEUE_SIZE)\n};\nconst wrappedEvents = {\n  [events.REQUEST]: networkEvents.NETWORK_REQUEST,\n  [events.REQUEST_TIMEOUT]: networkEvents.NETWORK_REQUEST_TIMEOUT,\n  [events.REQUEST_QUEUE_SIZE]: networkEvents.NETWORK_REQUEST_QUEUE_SIZE\n};\nconst reversedWrappedEvents = swapObject(wrappedEvents);\n\nconst unwrap = eventName => wrappedEvents[eventName] || eventName;\n\nconst wrap = eventName => reversedWrappedEvents[eventName] || eventName;\n\nmodule.exports = {\n  events,\n  wrap,\n  unwrap\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/producer/instrumentationEvents.js"],"names":["swapObject","require","networkEvents","InstrumentationEventType","producerType","events","CONNECT","DISCONNECT","REQUEST","NETWORK_REQUEST","REQUEST_TIMEOUT","NETWORK_REQUEST_TIMEOUT","REQUEST_QUEUE_SIZE","NETWORK_REQUEST_QUEUE_SIZE","wrappedEvents","reversedWrappedEvents","unwrap","eventName","wrap","module","exports"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,kCAAD,CAA7B;;AACA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,8BAAD,CAAxC;;AACA,MAAMG,YAAY,GAAGD,wBAAwB,CAAC,UAAD,CAA7C;AAEA,MAAME,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAEF,YAAY,CAAC,SAAD,CADR;AAEbG,EAAAA,UAAU,EAAEH,YAAY,CAAC,YAAD,CAFX;AAGbI,EAAAA,OAAO,EAAEJ,YAAY,CAACF,aAAa,CAACO,eAAf,CAHR;AAIbC,EAAAA,eAAe,EAAEN,YAAY,CAACF,aAAa,CAACS,uBAAf,CAJhB;AAKbC,EAAAA,kBAAkB,EAAER,YAAY,CAACF,aAAa,CAACW,0BAAf;AALnB,CAAf;AAQA,MAAMC,aAAa,GAAG;AACpB,GAACT,MAAM,CAACG,OAAR,GAAkBN,aAAa,CAACO,eADZ;AAEpB,GAACJ,MAAM,CAACK,eAAR,GAA0BR,aAAa,CAACS,uBAFpB;AAGpB,GAACN,MAAM,CAACO,kBAAR,GAA6BV,aAAa,CAACW;AAHvB,CAAtB;AAMA,MAAME,qBAAqB,GAAGf,UAAU,CAACc,aAAD,CAAxC;;AACA,MAAME,MAAM,GAAGC,SAAS,IAAIH,aAAa,CAACG,SAAD,CAAb,IAA4BA,SAAxD;;AACA,MAAMC,IAAI,GAAGD,SAAS,IAAIF,qBAAqB,CAACE,SAAD,CAArB,IAAoCA,SAA9D;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,MADe;AAEfa,EAAAA,IAFe;AAGfF,EAAAA;AAHe,CAAjB","sourcesContent":["const swapObject = require('../utils/swapObject')\nconst networkEvents = require('../network/instrumentationEvents')\nconst InstrumentationEventType = require('../instrumentation/eventType')\nconst producerType = InstrumentationEventType('producer')\n\nconst events = {\n  CONNECT: producerType('connect'),\n  DISCONNECT: producerType('disconnect'),\n  REQUEST: producerType(networkEvents.NETWORK_REQUEST),\n  REQUEST_TIMEOUT: producerType(networkEvents.NETWORK_REQUEST_TIMEOUT),\n  REQUEST_QUEUE_SIZE: producerType(networkEvents.NETWORK_REQUEST_QUEUE_SIZE),\n}\n\nconst wrappedEvents = {\n  [events.REQUEST]: networkEvents.NETWORK_REQUEST,\n  [events.REQUEST_TIMEOUT]: networkEvents.NETWORK_REQUEST_TIMEOUT,\n  [events.REQUEST_QUEUE_SIZE]: networkEvents.NETWORK_REQUEST_QUEUE_SIZE,\n}\n\nconst reversedWrappedEvents = swapObject(wrappedEvents)\nconst unwrap = eventName => wrappedEvents[eventName] || eventName\nconst wrap = eventName => reversedWrappedEvents[eventName] || eventName\n\nmodule.exports = {\n  events,\n  wrap,\n  unwrap,\n}\n"]},"metadata":{},"sourceType":"script"}