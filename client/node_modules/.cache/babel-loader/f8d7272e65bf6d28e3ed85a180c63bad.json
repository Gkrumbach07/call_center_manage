{"ast":null,"code":"const {\n  decode\n} = require('../v3/response');\n\nconst {\n  KafkaJSMemberIdRequired\n} = require('../../../../errors');\n\nconst {\n  failure,\n  createErrorFromCode,\n  errorCodes\n} = require('../../../error');\n/**\n * JoinGroup Response (Version: 4) => throttle_time_ms error_code generation_id group_protocol leader_id member_id [members]\n *   throttle_time_ms => INT32\n *   error_code => INT16\n *   generation_id => INT32\n *   group_protocol => STRING\n *   leader_id => STRING\n *   member_id => STRING\n *   members => member_id member_metadata\n *     member_id => STRING\n *     member_metadata => BYTES\n */\n\n\nconst {\n  code: MEMBER_ID_REQUIRED_ERROR_CODE\n} = errorCodes.find(e => e.type === 'MEMBER_ID_REQUIRED');\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    if (data.errorCode === MEMBER_ID_REQUIRED_ERROR_CODE) {\n      throw new KafkaJSMemberIdRequired(createErrorFromCode(data.errorCode), {\n        memberId: data.memberId\n      });\n    }\n\n    throw createErrorFromCode(data.errorCode);\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/joinGroup/v4/response.js"],"names":["decode","require","KafkaJSMemberIdRequired","failure","createErrorFromCode","errorCodes","code","MEMBER_ID_REQUIRED_ERROR_CODE","find","e","type","parse","data","errorCode","memberId","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA8BD,OAAO,CAAC,oBAAD,CAA3C;;AACA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,mBAAX;AAAgCC,EAAAA;AAAhC,IAA+CJ,OAAO,CAAC,gBAAD,CAA5D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAM;AAAEK,EAAAA,IAAI,EAAEC;AAAR,IAA0CF,UAAU,CAACG,IAAX,CAC9CC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,oBAD8B,CAAhD;;AAIA,MAAMC,KAAK,GAAG,MAAMC,IAAN,IAAc;AAC1B,MAAIT,OAAO,CAACS,IAAI,CAACC,SAAN,CAAX,EAA6B;AAC3B,QAAID,IAAI,CAACC,SAAL,KAAmBN,6BAAvB,EAAsD;AACpD,YAAM,IAAIL,uBAAJ,CAA4BE,mBAAmB,CAACQ,IAAI,CAACC,SAAN,CAA/C,EAAiE;AACrEC,QAAAA,QAAQ,EAAEF,IAAI,CAACE;AADsD,OAAjE,CAAN;AAGD;;AAED,UAAMV,mBAAmB,CAACQ,IAAI,CAACC,SAAN,CAAzB;AACD;;AAED,SAAOD,IAAP;AACD,CAZD;;AAcAG,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,MADe;AAEfW,EAAAA;AAFe,CAAjB","sourcesContent":["const { decode } = require('../v3/response')\nconst { KafkaJSMemberIdRequired } = require('../../../../errors')\nconst { failure, createErrorFromCode, errorCodes } = require('../../../error')\n\n/**\n * JoinGroup Response (Version: 4) => throttle_time_ms error_code generation_id group_protocol leader_id member_id [members]\n *   throttle_time_ms => INT32\n *   error_code => INT16\n *   generation_id => INT32\n *   group_protocol => STRING\n *   leader_id => STRING\n *   member_id => STRING\n *   members => member_id member_metadata\n *     member_id => STRING\n *     member_metadata => BYTES\n */\n\nconst { code: MEMBER_ID_REQUIRED_ERROR_CODE } = errorCodes.find(\n  e => e.type === 'MEMBER_ID_REQUIRED'\n)\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    if (data.errorCode === MEMBER_ID_REQUIRED_ERROR_CODE) {\n      throw new KafkaJSMemberIdRequired(createErrorFromCode(data.errorCode), {\n        memberId: data.memberId,\n      })\n    }\n\n    throw createErrorFromCode(data.errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"]},"metadata":{},"sourceType":"script"}