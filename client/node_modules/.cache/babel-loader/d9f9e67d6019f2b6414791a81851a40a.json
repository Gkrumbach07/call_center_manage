{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  ListOffsets: apiKey\n} = require('../../apiKeys');\n/**\n * ListOffsets Request (Version: 2) => replica_id isolation_level [topics]\n *   replica_id => INT32\n *   isolation_level => INT8\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => partition timestamp\n *       partition => INT32\n *       timestamp => INT64\n */\n\n\nmodule.exports = ({\n  replicaId,\n  isolationLevel,\n  topics\n}) => ({\n  apiKey,\n  apiVersion: 2,\n  apiName: 'ListOffsets',\n  encode: async () => {\n    return new Encoder().writeInt32(replicaId).writeInt8(isolationLevel).writeArray(topics.map(encodeTopic));\n  }\n});\n\nconst encodeTopic = ({\n  topic,\n  partitions\n}) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition));\n};\n\nconst encodePartition = ({\n  partition,\n  timestamp = -1\n}) => {\n  return new Encoder().writeInt32(partition).writeInt64(timestamp);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/listOffsets/v2/request.js"],"names":["Encoder","require","ListOffsets","apiKey","module","exports","replicaId","isolationLevel","topics","apiVersion","apiName","encode","writeInt32","writeInt8","writeArray","map","encodeTopic","topic","partitions","writeString","encodePartition","partition","timestamp","writeInt64"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,WAAW,EAAEC;AAAf,IAA0BF,OAAO,CAAC,eAAD,CAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA;AAA7B,CAAD,MAA4C;AAC3DL,EAAAA,MAD2D;AAE3DM,EAAAA,UAAU,EAAE,CAF+C;AAG3DC,EAAAA,OAAO,EAAE,aAHkD;AAI3DC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIX,OAAJ,GACJY,UADI,CACON,SADP,EAEJO,SAFI,CAEMN,cAFN,EAGJO,UAHI,CAGON,MAAM,CAACO,GAAP,CAAWC,WAAX,CAHP,CAAP;AAID;AAT0D,CAA5C,CAAjB;;AAYA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC7C,SAAO,IAAIlB,OAAJ,GAAcmB,WAAd,CAA0BF,KAA1B,EAAiCH,UAAjC,CAA4CI,UAAU,CAACH,GAAX,CAAeK,eAAf,CAA5C,CAAP;AACD,CAFD;;AAIA,MAAMA,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAS,GAAG,CAAC;AAA1B,CAAD,KAAmC;AACzD,SAAO,IAAItB,OAAJ,GAAcY,UAAd,CAAyBS,SAAzB,EAAoCE,UAApC,CAA+CD,SAA/C,CAAP;AACD,CAFD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { ListOffsets: apiKey } = require('../../apiKeys')\n\n/**\n * ListOffsets Request (Version: 2) => replica_id isolation_level [topics]\n *   replica_id => INT32\n *   isolation_level => INT8\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => partition timestamp\n *       partition => INT32\n *       timestamp => INT64\n */\nmodule.exports = ({ replicaId, isolationLevel, topics }) => ({\n  apiKey,\n  apiVersion: 2,\n  apiName: 'ListOffsets',\n  encode: async () => {\n    return new Encoder()\n      .writeInt32(replicaId)\n      .writeInt8(isolationLevel)\n      .writeArray(topics.map(encodeTopic))\n  },\n})\n\nconst encodeTopic = ({ topic, partitions }) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition))\n}\n\nconst encodePartition = ({ partition, timestamp = -1 }) => {\n  return new Encoder().writeInt32(partition).writeInt64(timestamp)\n}\n"]},"metadata":{},"sourceType":"script"}