{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  OffsetCommit: apiKey\n} = require('../../apiKeys');\n/**\n * OffsetCommit Request (Version: 2) => group_id group_generation_id member_id retention_time [topics]\n *   group_id => STRING\n *   group_generation_id => INT32\n *   member_id => STRING\n *   retention_time => INT64\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => partition offset metadata\n *       partition => INT32\n *       offset => INT64\n *       metadata => NULLABLE_STRING\n */\n\n\nmodule.exports = ({\n  groupId,\n  groupGenerationId,\n  memberId,\n  retentionTime,\n  topics\n}) => ({\n  apiKey,\n  apiVersion: 2,\n  apiName: 'OffsetCommit',\n  encode: async () => {\n    return new Encoder().writeString(groupId).writeInt32(groupGenerationId).writeString(memberId).writeInt64(retentionTime).writeArray(topics.map(encodeTopic));\n  }\n});\n\nconst encodeTopic = ({\n  topic,\n  partitions\n}) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition));\n};\n\nconst encodePartition = ({\n  partition,\n  offset,\n  metadata = null\n}) => {\n  return new Encoder().writeInt32(partition).writeInt64(offset).writeString(metadata);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/offsetCommit/v2/request.js"],"names":["Encoder","require","OffsetCommit","apiKey","module","exports","groupId","groupGenerationId","memberId","retentionTime","topics","apiVersion","apiName","encode","writeString","writeInt32","writeInt64","writeArray","map","encodeTopic","topic","partitions","encodePartition","partition","offset","metadata"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,YAAY,EAAEC;AAAhB,IAA2BF,OAAO,CAAC,eAAD,CAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA,aAAxC;AAAuDC,EAAAA;AAAvD,CAAD,MAAsE;AACrFP,EAAAA,MADqF;AAErFQ,EAAAA,UAAU,EAAE,CAFyE;AAGrFC,EAAAA,OAAO,EAAE,cAH4E;AAIrFC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIb,OAAJ,GACJc,WADI,CACQR,OADR,EAEJS,UAFI,CAEOR,iBAFP,EAGJO,WAHI,CAGQN,QAHR,EAIJQ,UAJI,CAIOP,aAJP,EAKJQ,UALI,CAKOP,MAAM,CAACQ,GAAP,CAAWC,WAAX,CALP,CAAP;AAMD;AAXoF,CAAtE,CAAjB;;AAcA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC7C,SAAO,IAAIrB,OAAJ,GAAcc,WAAd,CAA0BM,KAA1B,EAAiCH,UAAjC,CAA4CI,UAAU,CAACH,GAAX,CAAeI,eAAf,CAA5C,CAAP;AACD,CAFD;;AAIA,MAAMA,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,QAAQ,GAAG;AAAhC,CAAD,KAA4C;AAClE,SAAO,IAAIzB,OAAJ,GACJe,UADI,CACOQ,SADP,EAEJP,UAFI,CAEOQ,MAFP,EAGJV,WAHI,CAGQW,QAHR,CAAP;AAID,CALD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { OffsetCommit: apiKey } = require('../../apiKeys')\n\n/**\n * OffsetCommit Request (Version: 2) => group_id group_generation_id member_id retention_time [topics]\n *   group_id => STRING\n *   group_generation_id => INT32\n *   member_id => STRING\n *   retention_time => INT64\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => partition offset metadata\n *       partition => INT32\n *       offset => INT64\n *       metadata => NULLABLE_STRING\n */\n\nmodule.exports = ({ groupId, groupGenerationId, memberId, retentionTime, topics }) => ({\n  apiKey,\n  apiVersion: 2,\n  apiName: 'OffsetCommit',\n  encode: async () => {\n    return new Encoder()\n      .writeString(groupId)\n      .writeInt32(groupGenerationId)\n      .writeString(memberId)\n      .writeInt64(retentionTime)\n      .writeArray(topics.map(encodeTopic))\n  },\n})\n\nconst encodeTopic = ({ topic, partitions }) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition))\n}\n\nconst encodePartition = ({ partition, offset, metadata = null }) => {\n  return new Encoder()\n    .writeInt32(partition)\n    .writeInt64(offset)\n    .writeString(metadata)\n}\n"]},"metadata":{},"sourceType":"script"}