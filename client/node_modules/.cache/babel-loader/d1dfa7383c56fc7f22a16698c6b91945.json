{"ast":null,"code":"const swapObject = require('../utils/swapObject');\n\nconst InstrumentationEventType = require('../instrumentation/eventType');\n\nconst networkEvents = require('../network/instrumentationEvents');\n\nconst consumerType = InstrumentationEventType('consumer');\nconst events = {\n  HEARTBEAT: consumerType('heartbeat'),\n  COMMIT_OFFSETS: consumerType('commit_offsets'),\n  GROUP_JOIN: consumerType('group_join'),\n  FETCH: consumerType('fetch'),\n  FETCH_START: consumerType('fetch_start'),\n  START_BATCH_PROCESS: consumerType('start_batch_process'),\n  END_BATCH_PROCESS: consumerType('end_batch_process'),\n  CONNECT: consumerType('connect'),\n  DISCONNECT: consumerType('disconnect'),\n  STOP: consumerType('stop'),\n  CRASH: consumerType('crash'),\n  RECEIVED_UNSUBSCRIBED_TOPICS: consumerType('received_unsubscribed_topics'),\n  REQUEST: consumerType(networkEvents.NETWORK_REQUEST),\n  REQUEST_TIMEOUT: consumerType(networkEvents.NETWORK_REQUEST_TIMEOUT),\n  REQUEST_QUEUE_SIZE: consumerType(networkEvents.NETWORK_REQUEST_QUEUE_SIZE)\n};\nconst wrappedEvents = {\n  [events.REQUEST]: networkEvents.NETWORK_REQUEST,\n  [events.REQUEST_TIMEOUT]: networkEvents.NETWORK_REQUEST_TIMEOUT,\n  [events.REQUEST_QUEUE_SIZE]: networkEvents.NETWORK_REQUEST_QUEUE_SIZE\n};\nconst reversedWrappedEvents = swapObject(wrappedEvents);\n\nconst unwrap = eventName => wrappedEvents[eventName] || eventName;\n\nconst wrap = eventName => reversedWrappedEvents[eventName] || eventName;\n\nmodule.exports = {\n  events,\n  wrap,\n  unwrap\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/consumer/instrumentationEvents.js"],"names":["swapObject","require","InstrumentationEventType","networkEvents","consumerType","events","HEARTBEAT","COMMIT_OFFSETS","GROUP_JOIN","FETCH","FETCH_START","START_BATCH_PROCESS","END_BATCH_PROCESS","CONNECT","DISCONNECT","STOP","CRASH","RECEIVED_UNSUBSCRIBED_TOPICS","REQUEST","NETWORK_REQUEST","REQUEST_TIMEOUT","NETWORK_REQUEST_TIMEOUT","REQUEST_QUEUE_SIZE","NETWORK_REQUEST_QUEUE_SIZE","wrappedEvents","reversedWrappedEvents","unwrap","eventName","wrap","module","exports"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,8BAAD,CAAxC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,kCAAD,CAA7B;;AACA,MAAMG,YAAY,GAAGF,wBAAwB,CAAC,UAAD,CAA7C;AAEA,MAAMG,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAEF,YAAY,CAAC,WAAD,CADV;AAEbG,EAAAA,cAAc,EAAEH,YAAY,CAAC,gBAAD,CAFf;AAGbI,EAAAA,UAAU,EAAEJ,YAAY,CAAC,YAAD,CAHX;AAIbK,EAAAA,KAAK,EAAEL,YAAY,CAAC,OAAD,CAJN;AAKbM,EAAAA,WAAW,EAAEN,YAAY,CAAC,aAAD,CALZ;AAMbO,EAAAA,mBAAmB,EAAEP,YAAY,CAAC,qBAAD,CANpB;AAObQ,EAAAA,iBAAiB,EAAER,YAAY,CAAC,mBAAD,CAPlB;AAQbS,EAAAA,OAAO,EAAET,YAAY,CAAC,SAAD,CARR;AASbU,EAAAA,UAAU,EAAEV,YAAY,CAAC,YAAD,CATX;AAUbW,EAAAA,IAAI,EAAEX,YAAY,CAAC,MAAD,CAVL;AAWbY,EAAAA,KAAK,EAAEZ,YAAY,CAAC,OAAD,CAXN;AAYba,EAAAA,4BAA4B,EAAEb,YAAY,CAAC,8BAAD,CAZ7B;AAabc,EAAAA,OAAO,EAAEd,YAAY,CAACD,aAAa,CAACgB,eAAf,CAbR;AAcbC,EAAAA,eAAe,EAAEhB,YAAY,CAACD,aAAa,CAACkB,uBAAf,CAdhB;AAebC,EAAAA,kBAAkB,EAAElB,YAAY,CAACD,aAAa,CAACoB,0BAAf;AAfnB,CAAf;AAkBA,MAAMC,aAAa,GAAG;AACpB,GAACnB,MAAM,CAACa,OAAR,GAAkBf,aAAa,CAACgB,eADZ;AAEpB,GAACd,MAAM,CAACe,eAAR,GAA0BjB,aAAa,CAACkB,uBAFpB;AAGpB,GAAChB,MAAM,CAACiB,kBAAR,GAA6BnB,aAAa,CAACoB;AAHvB,CAAtB;AAMA,MAAME,qBAAqB,GAAGzB,UAAU,CAACwB,aAAD,CAAxC;;AACA,MAAME,MAAM,GAAGC,SAAS,IAAIH,aAAa,CAACG,SAAD,CAAb,IAA4BA,SAAxD;;AACA,MAAMC,IAAI,GAAGD,SAAS,IAAIF,qBAAqB,CAACE,SAAD,CAArB,IAAoCA,SAA9D;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,MADe;AAEfuB,EAAAA,IAFe;AAGfF,EAAAA;AAHe,CAAjB","sourcesContent":["const swapObject = require('../utils/swapObject')\nconst InstrumentationEventType = require('../instrumentation/eventType')\nconst networkEvents = require('../network/instrumentationEvents')\nconst consumerType = InstrumentationEventType('consumer')\n\nconst events = {\n  HEARTBEAT: consumerType('heartbeat'),\n  COMMIT_OFFSETS: consumerType('commit_offsets'),\n  GROUP_JOIN: consumerType('group_join'),\n  FETCH: consumerType('fetch'),\n  FETCH_START: consumerType('fetch_start'),\n  START_BATCH_PROCESS: consumerType('start_batch_process'),\n  END_BATCH_PROCESS: consumerType('end_batch_process'),\n  CONNECT: consumerType('connect'),\n  DISCONNECT: consumerType('disconnect'),\n  STOP: consumerType('stop'),\n  CRASH: consumerType('crash'),\n  RECEIVED_UNSUBSCRIBED_TOPICS: consumerType('received_unsubscribed_topics'),\n  REQUEST: consumerType(networkEvents.NETWORK_REQUEST),\n  REQUEST_TIMEOUT: consumerType(networkEvents.NETWORK_REQUEST_TIMEOUT),\n  REQUEST_QUEUE_SIZE: consumerType(networkEvents.NETWORK_REQUEST_QUEUE_SIZE),\n}\n\nconst wrappedEvents = {\n  [events.REQUEST]: networkEvents.NETWORK_REQUEST,\n  [events.REQUEST_TIMEOUT]: networkEvents.NETWORK_REQUEST_TIMEOUT,\n  [events.REQUEST_QUEUE_SIZE]: networkEvents.NETWORK_REQUEST_QUEUE_SIZE,\n}\n\nconst reversedWrappedEvents = swapObject(wrappedEvents)\nconst unwrap = eventName => wrappedEvents[eventName] || eventName\nconst wrap = eventName => reversedWrappedEvents[eventName] || eventName\n\nmodule.exports = {\n  events,\n  wrap,\n  unwrap,\n}\n"]},"metadata":{},"sourceType":"script"}