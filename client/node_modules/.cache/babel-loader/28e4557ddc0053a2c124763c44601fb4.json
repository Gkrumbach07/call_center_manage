{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  AddPartitionsToTxn: apiKey\n} = require('../../apiKeys');\n/**\n * AddPartitionsToTxn Request (Version: 0) => transactional_id producer_id producer_epoch [topics]\n *   transactional_id => STRING\n *   producer_id => INT64\n *   producer_epoch => INT16\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => INT32\n */\n\n\nmodule.exports = ({\n  transactionalId,\n  producerId,\n  producerEpoch,\n  topics\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'AddPartitionsToTxn',\n  encode: async () => {\n    return new Encoder().writeString(transactionalId).writeInt64(producerId).writeInt16(producerEpoch).writeArray(topics.map(encodeTopic));\n  }\n});\n\nconst encodeTopic = ({\n  topic,\n  partitions\n}) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition));\n};\n\nconst encodePartition = partition => {\n  return new Encoder().writeInt32(partition);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/addPartitionsToTxn/v0/request.js"],"names":["Encoder","require","AddPartitionsToTxn","apiKey","module","exports","transactionalId","producerId","producerEpoch","topics","apiVersion","apiName","encode","writeString","writeInt64","writeInt16","writeArray","map","encodeTopic","topic","partitions","encodePartition","partition","writeInt32"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,kBAAkB,EAAEC;AAAtB,IAAiCF,OAAO,CAAC,eAAD,CAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA,aAA/B;AAA8CC,EAAAA;AAA9C,CAAD,MAA6D;AAC5EN,EAAAA,MAD4E;AAE5EO,EAAAA,UAAU,EAAE,CAFgE;AAG5EC,EAAAA,OAAO,EAAE,oBAHmE;AAI5EC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIZ,OAAJ,GACJa,WADI,CACQP,eADR,EAEJQ,UAFI,CAEOP,UAFP,EAGJQ,UAHI,CAGOP,aAHP,EAIJQ,UAJI,CAIOP,MAAM,CAACQ,GAAP,CAAWC,WAAX,CAJP,CAAP;AAKD;AAV2E,CAA7D,CAAjB;;AAaA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC7C,SAAO,IAAIpB,OAAJ,GAAca,WAAd,CAA0BM,KAA1B,EAAiCH,UAAjC,CAA4CI,UAAU,CAACH,GAAX,CAAeI,eAAf,CAA5C,CAAP;AACD,CAFD;;AAIA,MAAMA,eAAe,GAAGC,SAAS,IAAI;AACnC,SAAO,IAAItB,OAAJ,GAAcuB,UAAd,CAAyBD,SAAzB,CAAP;AACD,CAFD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { AddPartitionsToTxn: apiKey } = require('../../apiKeys')\n\n/**\n * AddPartitionsToTxn Request (Version: 0) => transactional_id producer_id producer_epoch [topics]\n *   transactional_id => STRING\n *   producer_id => INT64\n *   producer_epoch => INT16\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => INT32\n */\n\nmodule.exports = ({ transactionalId, producerId, producerEpoch, topics }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'AddPartitionsToTxn',\n  encode: async () => {\n    return new Encoder()\n      .writeString(transactionalId)\n      .writeInt64(producerId)\n      .writeInt16(producerEpoch)\n      .writeArray(topics.map(encodeTopic))\n  },\n})\n\nconst encodeTopic = ({ topic, partitions }) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition))\n}\n\nconst encodePartition = partition => {\n  return new Encoder().writeInt32(partition)\n}\n"]},"metadata":{},"sourceType":"script"}