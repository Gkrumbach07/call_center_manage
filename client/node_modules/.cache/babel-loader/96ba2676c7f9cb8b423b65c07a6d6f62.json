{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  SyncGroup: apiKey\n} = require('../../apiKeys');\n/**\n * Version 3 adds group_instance_id to indicate member identity across restarts.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-345%3A+Introduce+static+membership+protocol+to+reduce+consumer+rebalances\n *\n * SyncGroup Request (Version: 3) => group_id generation_id member_id group_instance_id [group_assignment]\n *   group_id => STRING\n *   generation_id => INT32\n *   member_id => STRING\n *   group_instance_id => NULLABLE_STRING\n *   group_assignment => member_id member_assignment\n *     member_id => STRING\n *     member_assignment => BYTES\n */\n\n\nmodule.exports = ({\n  groupId,\n  generationId,\n  memberId,\n  groupInstanceId = null,\n  groupAssignment\n}) => ({\n  apiKey,\n  apiVersion: 3,\n  apiName: 'SyncGroup',\n  encode: async () => {\n    return new Encoder().writeString(groupId).writeInt32(generationId).writeString(memberId).writeString(groupInstanceId).writeArray(groupAssignment.map(encodeGroupAssignment));\n  }\n});\n\nconst encodeGroupAssignment = ({\n  memberId,\n  memberAssignment\n}) => {\n  return new Encoder().writeString(memberId).writeBytes(memberAssignment);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/syncGroup/v3/request.js"],"names":["Encoder","require","SyncGroup","apiKey","module","exports","groupId","generationId","memberId","groupInstanceId","groupAssignment","apiVersion","apiName","encode","writeString","writeInt32","writeArray","map","encodeGroupAssignment","memberAssignment","writeBytes"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,SAAS,EAAEC;AAAb,IAAwBF,OAAO,CAAC,eAAD,CAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAChBC,EAAAA,OADgB;AAEhBC,EAAAA,YAFgB;AAGhBC,EAAAA,QAHgB;AAIhBC,EAAAA,eAAe,GAAG,IAJF;AAKhBC,EAAAA;AALgB,CAAD,MAMV;AACLP,EAAAA,MADK;AAELQ,EAAAA,UAAU,EAAE,CAFP;AAGLC,EAAAA,OAAO,EAAE,WAHJ;AAILC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIb,OAAJ,GACJc,WADI,CACQR,OADR,EAEJS,UAFI,CAEOR,YAFP,EAGJO,WAHI,CAGQN,QAHR,EAIJM,WAJI,CAIQL,eAJR,EAKJO,UALI,CAKON,eAAe,CAACO,GAAhB,CAAoBC,qBAApB,CALP,CAAP;AAMD;AAXI,CANU,CAAjB;;AAoBA,MAAMA,qBAAqB,GAAG,CAAC;AAAEV,EAAAA,QAAF;AAAYW,EAAAA;AAAZ,CAAD,KAAoC;AAChE,SAAO,IAAInB,OAAJ,GAAcc,WAAd,CAA0BN,QAA1B,EAAoCY,UAApC,CAA+CD,gBAA/C,CAAP;AACD,CAFD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { SyncGroup: apiKey } = require('../../apiKeys')\n\n/**\n * Version 3 adds group_instance_id to indicate member identity across restarts.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-345%3A+Introduce+static+membership+protocol+to+reduce+consumer+rebalances\n *\n * SyncGroup Request (Version: 3) => group_id generation_id member_id group_instance_id [group_assignment]\n *   group_id => STRING\n *   generation_id => INT32\n *   member_id => STRING\n *   group_instance_id => NULLABLE_STRING\n *   group_assignment => member_id member_assignment\n *     member_id => STRING\n *     member_assignment => BYTES\n */\n\nmodule.exports = ({\n  groupId,\n  generationId,\n  memberId,\n  groupInstanceId = null,\n  groupAssignment,\n}) => ({\n  apiKey,\n  apiVersion: 3,\n  apiName: 'SyncGroup',\n  encode: async () => {\n    return new Encoder()\n      .writeString(groupId)\n      .writeInt32(generationId)\n      .writeString(memberId)\n      .writeString(groupInstanceId)\n      .writeArray(groupAssignment.map(encodeGroupAssignment))\n  },\n})\n\nconst encodeGroupAssignment = ({ memberId, memberAssignment }) => {\n  return new Encoder().writeString(memberId).writeBytes(memberAssignment)\n}\n"]},"metadata":{},"sourceType":"script"}