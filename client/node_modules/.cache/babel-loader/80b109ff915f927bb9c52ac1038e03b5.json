{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  CreatePartitions: apiKey\n} = require('../../apiKeys');\n/**\n * CreatePartitions Request (Version: 0) => [topic_partitions] timeout validate_only\n *   topic_partitions => topic new_partitions\n *     topic => STRING\n *     new_partitions => count [assignment]\n *       count => INT32\n *       assignment => ARRAY(INT32)\n *   timeout => INT32\n *   validate_only => BOOLEAN\n */\n\n\nmodule.exports = ({\n  topicPartitions,\n  validateOnly = false,\n  timeout = 5000\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'CreatePartitions',\n  encode: async () => {\n    return new Encoder().writeArray(topicPartitions.map(encodeTopicPartitions)).writeInt32(timeout).writeBoolean(validateOnly);\n  }\n});\n\nconst encodeTopicPartitions = ({\n  topic,\n  count,\n  assignments = []\n}) => {\n  return new Encoder().writeString(topic).writeInt32(count).writeNullableArray(assignments.map(encodeAssignments));\n};\n\nconst encodeAssignments = brokerIds => {\n  return new Encoder().writeNullableArray(brokerIds);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/createPartitions/v0/request.js"],"names":["Encoder","require","CreatePartitions","apiKey","module","exports","topicPartitions","validateOnly","timeout","apiVersion","apiName","encode","writeArray","map","encodeTopicPartitions","writeInt32","writeBoolean","topic","count","assignments","writeString","writeNullableArray","encodeAssignments","brokerIds"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,gBAAgB,EAAEC;AAApB,IAA+BF,OAAO,CAAC,eAAD,CAA5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,YAAY,GAAG,KAAlC;AAAyCC,EAAAA,OAAO,GAAG;AAAnD,CAAD,MAAgE;AAC/EL,EAAAA,MAD+E;AAE/EM,EAAAA,UAAU,EAAE,CAFmE;AAG/EC,EAAAA,OAAO,EAAE,kBAHsE;AAI/EC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIX,OAAJ,GACJY,UADI,CACON,eAAe,CAACO,GAAhB,CAAoBC,qBAApB,CADP,EAEJC,UAFI,CAEOP,OAFP,EAGJQ,YAHI,CAGST,YAHT,CAAP;AAID;AAT8E,CAAhE,CAAjB;;AAYA,MAAMO,qBAAqB,GAAG,CAAC;AAAEG,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,WAAW,GAAG;AAA9B,CAAD,KAAwC;AACpE,SAAO,IAAInB,OAAJ,GACJoB,WADI,CACQH,KADR,EAEJF,UAFI,CAEOG,KAFP,EAGJG,kBAHI,CAGeF,WAAW,CAACN,GAAZ,CAAgBS,iBAAhB,CAHf,CAAP;AAID,CALD;;AAOA,MAAMA,iBAAiB,GAAGC,SAAS,IAAI;AACrC,SAAO,IAAIvB,OAAJ,GAAcqB,kBAAd,CAAiCE,SAAjC,CAAP;AACD,CAFD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { CreatePartitions: apiKey } = require('../../apiKeys')\n\n/**\n * CreatePartitions Request (Version: 0) => [topic_partitions] timeout validate_only\n *   topic_partitions => topic new_partitions\n *     topic => STRING\n *     new_partitions => count [assignment]\n *       count => INT32\n *       assignment => ARRAY(INT32)\n *   timeout => INT32\n *   validate_only => BOOLEAN\n */\n\nmodule.exports = ({ topicPartitions, validateOnly = false, timeout = 5000 }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'CreatePartitions',\n  encode: async () => {\n    return new Encoder()\n      .writeArray(topicPartitions.map(encodeTopicPartitions))\n      .writeInt32(timeout)\n      .writeBoolean(validateOnly)\n  },\n})\n\nconst encodeTopicPartitions = ({ topic, count, assignments = [] }) => {\n  return new Encoder()\n    .writeString(topic)\n    .writeInt32(count)\n    .writeNullableArray(assignments.map(encodeAssignments))\n}\n\nconst encodeAssignments = brokerIds => {\n  return new Encoder().writeNullableArray(brokerIds)\n}\n"]},"metadata":{},"sourceType":"script"}