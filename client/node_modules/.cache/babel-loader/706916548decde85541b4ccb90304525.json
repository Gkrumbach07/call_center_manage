{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  DescribeConfigs: apiKey\n} = require('../../apiKeys');\n/**\n * DescribeConfigs Request (Version: 1) => [resources] include_synonyms\n *   resources => resource_type resource_name [config_names]\n *     resource_type => INT8\n *     resource_name => STRING\n *     config_names => STRING\n *   include_synonyms => BOOLEAN\n */\n\n/**\n * @param {Array} resources An array of config resources to be returned\n * @param [includeSynonyms=false]\n */\n\n\nmodule.exports = ({\n  resources,\n  includeSynonyms = false\n}) => ({\n  apiKey,\n  apiVersion: 1,\n  apiName: 'DescribeConfigs',\n  encode: async () => {\n    return new Encoder().writeArray(resources.map(encodeResource)).writeBoolean(includeSynonyms);\n  }\n});\n\nconst encodeResource = ({\n  type,\n  name,\n  configNames = []\n}) => {\n  return new Encoder().writeInt8(type).writeString(name).writeNullableArray(configNames);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/describeConfigs/v1/request.js"],"names":["Encoder","require","DescribeConfigs","apiKey","module","exports","resources","includeSynonyms","apiVersion","apiName","encode","writeArray","map","encodeResource","writeBoolean","type","name","configNames","writeInt8","writeString","writeNullableArray"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,eAAe,EAAEC;AAAnB,IAA8BF,OAAO,CAAC,eAAD,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,eAAe,GAAG;AAA/B,CAAD,MAA6C;AAC5DJ,EAAAA,MAD4D;AAE5DK,EAAAA,UAAU,EAAE,CAFgD;AAG5DC,EAAAA,OAAO,EAAE,iBAHmD;AAI5DC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIV,OAAJ,GAAcW,UAAd,CAAyBL,SAAS,CAACM,GAAV,CAAcC,cAAd,CAAzB,EAAwDC,YAAxD,CAAqEP,eAArE,CAAP;AACD;AAN2D,CAA7C,CAAjB;;AASA,MAAMM,cAAc,GAAG,CAAC;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,WAAW,GAAG;AAA5B,CAAD,KAAsC;AAC3D,SAAO,IAAIjB,OAAJ,GACJkB,SADI,CACMH,IADN,EAEJI,WAFI,CAEQH,IAFR,EAGJI,kBAHI,CAGeH,WAHf,CAAP;AAID,CALD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { DescribeConfigs: apiKey } = require('../../apiKeys')\n\n/**\n * DescribeConfigs Request (Version: 1) => [resources] include_synonyms\n *   resources => resource_type resource_name [config_names]\n *     resource_type => INT8\n *     resource_name => STRING\n *     config_names => STRING\n *   include_synonyms => BOOLEAN\n */\n\n/**\n * @param {Array} resources An array of config resources to be returned\n * @param [includeSynonyms=false]\n */\nmodule.exports = ({ resources, includeSynonyms = false }) => ({\n  apiKey,\n  apiVersion: 1,\n  apiName: 'DescribeConfigs',\n  encode: async () => {\n    return new Encoder().writeArray(resources.map(encodeResource)).writeBoolean(includeSynonyms)\n  },\n})\n\nconst encodeResource = ({ type, name, configNames = [] }) => {\n  return new Encoder()\n    .writeInt8(type)\n    .writeString(name)\n    .writeNullableArray(configNames)\n}\n"]},"metadata":{},"sourceType":"script"}