{"ast":null,"code":"const Decoder = require('../../../decoder');\n\nconst {\n  failure,\n  createErrorFromCode\n} = require('../../../error');\n/**\n * ListGroups Response (Version: 0) => error_code [groups]\n *   error_code => INT16\n *   groups => group_id protocol_type\n *     group_id => STRING\n *     protocol_type => STRING\n */\n\n\nconst decodeGroup = decoder => ({\n  groupId: decoder.readString(),\n  protocolType: decoder.readString()\n});\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData);\n  const errorCode = decoder.readInt16();\n  const groups = decoder.readArray(decodeGroup);\n  return {\n    errorCode,\n    groups\n  };\n};\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    throw createErrorFromCode(data.errorCode);\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  decodeGroup,\n  decode,\n  parse\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/listGroups/v0/response.js"],"names":["Decoder","require","failure","createErrorFromCode","decodeGroup","decoder","groupId","readString","protocolType","decode","rawData","errorCode","readInt16","groups","readArray","parse","data","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAmCF,OAAO,CAAC,gBAAD,CAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMG,WAAW,GAAGC,OAAO,KAAK;AAC9BC,EAAAA,OAAO,EAAED,OAAO,CAACE,UAAR,EADqB;AAE9BC,EAAAA,YAAY,EAAEH,OAAO,CAACE,UAAR;AAFgB,CAAL,CAA3B;;AAKA,MAAME,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAC9B,QAAML,OAAO,GAAG,IAAIL,OAAJ,CAAYU,OAAZ,CAAhB;AACA,QAAMC,SAAS,GAAGN,OAAO,CAACO,SAAR,EAAlB;AACA,QAAMC,MAAM,GAAGR,OAAO,CAACS,SAAR,CAAkBV,WAAlB,CAAf;AAEA,SAAO;AACLO,IAAAA,SADK;AAELE,IAAAA;AAFK,GAAP;AAID,CATD;;AAWA,MAAME,KAAK,GAAG,MAAMC,IAAN,IAAc;AAC1B,MAAId,OAAO,CAACc,IAAI,CAACL,SAAN,CAAX,EAA6B;AAC3B,UAAMR,mBAAmB,CAACa,IAAI,CAACL,SAAN,CAAzB;AACD;;AAED,SAAOK,IAAP;AACD,CAND;;AAQAC,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA,WADe;AAEfK,EAAAA,MAFe;AAGfM,EAAAA;AAHe,CAAjB","sourcesContent":["const Decoder = require('../../../decoder')\nconst { failure, createErrorFromCode } = require('../../../error')\n\n/**\n * ListGroups Response (Version: 0) => error_code [groups]\n *   error_code => INT16\n *   groups => group_id protocol_type\n *     group_id => STRING\n *     protocol_type => STRING\n */\n\nconst decodeGroup = decoder => ({\n  groupId: decoder.readString(),\n  protocolType: decoder.readString(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const errorCode = decoder.readInt16()\n  const groups = decoder.readArray(decodeGroup)\n\n  return {\n    errorCode,\n    groups,\n  }\n}\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    throw createErrorFromCode(data.errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decodeGroup,\n  decode,\n  parse,\n}\n"]},"metadata":{},"sourceType":"script"}