{"ast":null,"code":"const NETWORK_DELAY = 5000;\n/**\n * @see https://github.com/apache/kafka/pull/5203\n * The JOIN_GROUP request may block up to sessionTimeout (or rebalanceTimeout in JoinGroupV1),\n * so we should override the requestTimeout to be a bit more than the sessionTimeout\n * NOTE: the sessionTimeout can be configured as Number.MAX_SAFE_INTEGER and overflow when\n * increased, so we have to check for potential overflows\n **/\n\nconst requestTimeout = ({\n  rebalanceTimeout,\n  sessionTimeout\n}) => {\n  const timeout = rebalanceTimeout || sessionTimeout;\n  return Number.isSafeInteger(timeout + NETWORK_DELAY) ? timeout + NETWORK_DELAY : timeout;\n};\n\nconst logResponseError = memberId => memberId != null && memberId !== '';\n\nconst versions = {\n  0: ({\n    groupId,\n    sessionTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v0/request');\n\n    const response = require('./v0/response');\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout: null,\n        sessionTimeout\n      })\n    };\n  },\n  1: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v1/request');\n\n    const response = require('./v1/response');\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      })\n    };\n  },\n  2: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v2/request');\n\n    const response = require('./v2/response');\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      })\n    };\n  },\n  3: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v3/request');\n\n    const response = require('./v3/response');\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      })\n    };\n  },\n  4: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v4/request');\n\n    const response = require('./v4/response');\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      }),\n      logResponseError: logResponseError(memberId)\n    };\n  },\n  5: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    groupInstanceId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v5/request');\n\n    const response = require('./v5/response');\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        groupInstanceId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      }),\n      logResponseError: logResponseError(memberId)\n    };\n  }\n};\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({\n    version\n  }) => versions[version]\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/joinGroup/index.js"],"names":["NETWORK_DELAY","requestTimeout","rebalanceTimeout","sessionTimeout","timeout","Number","isSafeInteger","logResponseError","memberId","versions","groupId","protocolType","groupProtocols","request","require","response","groupInstanceId","module","exports","Object","keys","protocol","version"],"mappings":"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","sourcesContent":["const NETWORK_DELAY = 5000\n\n/**\n * @see https://github.com/apache/kafka/pull/5203\n * The JOIN_GROUP request may block up to sessionTimeout (or rebalanceTimeout in JoinGroupV1),\n * so we should override the requestTimeout to be a bit more than the sessionTimeout\n * NOTE: the sessionTimeout can be configured as Number.MAX_SAFE_INTEGER and overflow when\n * increased, so we have to check for potential overflows\n **/\nconst requestTimeout = ({ rebalanceTimeout, sessionTimeout }) => {\n  const timeout = rebalanceTimeout || sessionTimeout\n  return Number.isSafeInteger(timeout + NETWORK_DELAY) ? timeout + NETWORK_DELAY : timeout\n}\n\nconst logResponseError = memberId => memberId != null && memberId !== ''\n\nconst versions = {\n  0: ({ groupId, sessionTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v0/request')\n    const response = require('./v0/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout: null, sessionTimeout }),\n    }\n  },\n  1: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v1/request')\n    const response = require('./v1/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n    }\n  },\n  2: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v2/request')\n    const response = require('./v2/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n    }\n  },\n  3: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v3/request')\n    const response = require('./v3/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n    }\n  },\n  4: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v4/request')\n    const response = require('./v4/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n      logResponseError: logResponseError(memberId),\n    }\n  },\n  5: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    groupInstanceId,\n    protocolType,\n    groupProtocols,\n  }) => {\n    const request = require('./v5/request')\n    const response = require('./v5/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        groupInstanceId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n      logResponseError: logResponseError(memberId),\n    }\n  },\n}\n\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({ version }) => versions[version],\n}\n"]},"metadata":{},"sourceType":"script"}