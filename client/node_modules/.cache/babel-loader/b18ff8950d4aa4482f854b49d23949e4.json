{"ast":null,"code":"const versions = {\n  0: ({\n    topicPartitions,\n    timeout,\n    validateOnly\n  }) => {\n    const request = require('./v0/request');\n\n    const response = require('./v0/response');\n\n    return {\n      request: request({\n        topicPartitions,\n        timeout,\n        validateOnly\n      }),\n      response\n    };\n  },\n  1: ({\n    topicPartitions,\n    validateOnly,\n    timeout\n  }) => {\n    const request = require('./v1/request');\n\n    const response = require('./v1/response');\n\n    return {\n      request: request({\n        topicPartitions,\n        validateOnly,\n        timeout\n      }),\n      response\n    };\n  }\n};\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({\n    version\n  }) => versions[version]\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/createPartitions/index.js"],"names":["versions","topicPartitions","timeout","validateOnly","request","require","response","module","exports","Object","keys","protocol","version"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AACf,KAAG,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAAD,KAAgD;AACjD,UAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,UAAMC,QAAQ,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,WAAO;AAAED,MAAAA,OAAO,EAAEA,OAAO,CAAC;AAAEH,QAAAA,eAAF;AAAmBC,QAAAA,OAAnB;AAA4BC,QAAAA;AAA5B,OAAD,CAAlB;AAAgEG,MAAAA;AAAhE,KAAP;AACD,GALc;AAMf,KAAG,CAAC;AAAEL,IAAAA,eAAF;AAAmBE,IAAAA,YAAnB;AAAiCD,IAAAA;AAAjC,GAAD,KAAgD;AACjD,UAAME,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,UAAMC,QAAQ,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,WAAO;AAAED,MAAAA,OAAO,EAAEA,OAAO,CAAC;AAAEH,QAAAA,eAAF;AAAmBE,QAAAA,YAAnB;AAAiCD,QAAAA;AAAjC,OAAD,CAAlB;AAAgEI,MAAAA;AAAhE,KAAP;AACD;AAVc,CAAjB;AAaAC,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA,QAAQ,EAAES,MAAM,CAACC,IAAP,CAAYV,QAAZ,CADK;AAEfW,EAAAA,QAAQ,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiBZ,QAAQ,CAACY,OAAD;AAFpB,CAAjB","sourcesContent":["const versions = {\n  0: ({ topicPartitions, timeout, validateOnly }) => {\n    const request = require('./v0/request')\n    const response = require('./v0/response')\n    return { request: request({ topicPartitions, timeout, validateOnly }), response }\n  },\n  1: ({ topicPartitions, validateOnly, timeout }) => {\n    const request = require('./v1/request')\n    const response = require('./v1/response')\n    return { request: request({ topicPartitions, validateOnly, timeout }), response }\n  },\n}\n\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({ version }) => versions[version],\n}\n"]},"metadata":{},"sourceType":"script"}