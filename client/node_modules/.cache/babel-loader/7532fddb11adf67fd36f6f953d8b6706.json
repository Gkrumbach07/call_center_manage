{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gagekrumbach/Documents/call-center-manage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; // kafka setup\n\nconst {\n  Kafka\n} = require('kafkajs');\n\nconst kafka = new Kafka({\n  clientId: 'my-app',\n  brokers: ['kafka1:9092', 'kafka2:9092']\n});\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  rowPos: {\n    backgroundColor: '#a9e0a9'\n  },\n  rowNeg: {\n    backgroundColor: '#e0a9a9'\n  }\n});\n\nfunction createData(name, quality) {\n  return {\n    name,\n    quality\n  };\n}\n\nconst rows = [createData('1241223', \"POSITIVE\"), createData('234234', \"NEGATIVE\"), createData('3453245', \"POSITIVE\"), createData('234224', \"NEGATIVE\"), createData('34535', \"NEGATIVE\"), createData('234234', \"POSITIVE\"), createData('324234', \"POSITIVE\")];\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Call\\xA0Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Quality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          className: row.quality === \"POSITIVE\" ? classes.rowPos : classes.rowNeg,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.quality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/src/App.js"],"names":["makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Kafka","require","kafka","clientId","brokers","useStyles","table","minWidth","rowPos","backgroundColor","rowNeg","createData","name","quality","rows","App","classes","map","row"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n// kafka setup\nconst { Kafka } = require('kafkajs')\n\nconst kafka = new Kafka({\n  clientId: 'my-app',\n  brokers: ['kafka1:9092', 'kafka2:9092']\n})\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  rowPos: {\n    backgroundColor: '#a9e0a9'\n  },\n  rowNeg: {\n    backgroundColor: '#e0a9a9'\n  },\n});\n\nfunction createData(name, quality,) {\n  return { name, quality };\n}\n\nconst rows = [\n  createData('1241223', \"POSITIVE\"),\n  createData('234234', \"NEGATIVE\"),\n  createData('3453245', \"POSITIVE\"),\n  createData('234224', \"NEGATIVE\"),\n  createData('34535', \"NEGATIVE\"),\n  createData('234234', \"POSITIVE\"),\n  createData('324234', \"POSITIVE\"),\n\n];\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Call&nbsp;Line</TableCell>\n            <TableCell align=\"left\">Quality</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name} className={row.quality === \"POSITIVE\" ? classes.rowPos: classes.rowNeg}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\">{row.quality}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}