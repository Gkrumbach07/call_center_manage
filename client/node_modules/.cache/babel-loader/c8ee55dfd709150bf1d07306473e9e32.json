{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  OffsetCommit: apiKey\n} = require('../../apiKeys');\n/**\n * OffsetCommit Request (Version: 0) => group_id [topics]\n *   group_id => STRING\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => partition offset metadata\n *       partition => INT32\n *       offset => INT64\n *       metadata => NULLABLE_STRING\n */\n\n\nmodule.exports = ({\n  groupId,\n  topics\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'OffsetCommit',\n  encode: async () => {\n    return new Encoder().writeString(groupId).writeArray(topics.map(encodeTopic));\n  }\n});\n\nconst encodeTopic = ({\n  topic,\n  partitions\n}) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition));\n};\n\nconst encodePartition = ({\n  partition,\n  offset,\n  metadata = null\n}) => {\n  return new Encoder().writeInt32(partition).writeInt64(offset).writeString(metadata);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/offsetCommit/v0/request.js"],"names":["Encoder","require","OffsetCommit","apiKey","module","exports","groupId","topics","apiVersion","apiName","encode","writeString","writeArray","map","encodeTopic","topic","partitions","encodePartition","partition","offset","metadata","writeInt32","writeInt64"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,YAAY,EAAEC;AAAhB,IAA2BF,OAAO,CAAC,eAAD,CAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,MAA0B;AACzCJ,EAAAA,MADyC;AAEzCK,EAAAA,UAAU,EAAE,CAF6B;AAGzCC,EAAAA,OAAO,EAAE,cAHgC;AAIzCC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIV,OAAJ,GAAcW,WAAd,CAA0BL,OAA1B,EAAmCM,UAAnC,CAA8CL,MAAM,CAACM,GAAP,CAAWC,WAAX,CAA9C,CAAP;AACD;AANwC,CAA1B,CAAjB;;AASA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC7C,SAAO,IAAIhB,OAAJ,GAAcW,WAAd,CAA0BI,KAA1B,EAAiCH,UAAjC,CAA4CI,UAAU,CAACH,GAAX,CAAeI,eAAf,CAA5C,CAAP;AACD,CAFD;;AAIA,MAAMA,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,QAAQ,GAAG;AAAhC,CAAD,KAA4C;AAClE,SAAO,IAAIpB,OAAJ,GACJqB,UADI,CACOH,SADP,EAEJI,UAFI,CAEOH,MAFP,EAGJR,WAHI,CAGQS,QAHR,CAAP;AAID,CALD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { OffsetCommit: apiKey } = require('../../apiKeys')\n\n/**\n * OffsetCommit Request (Version: 0) => group_id [topics]\n *   group_id => STRING\n *   topics => topic [partitions]\n *     topic => STRING\n *     partitions => partition offset metadata\n *       partition => INT32\n *       offset => INT64\n *       metadata => NULLABLE_STRING\n */\n\nmodule.exports = ({ groupId, topics }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'OffsetCommit',\n  encode: async () => {\n    return new Encoder().writeString(groupId).writeArray(topics.map(encodeTopic))\n  },\n})\n\nconst encodeTopic = ({ topic, partitions }) => {\n  return new Encoder().writeString(topic).writeArray(partitions.map(encodePartition))\n}\n\nconst encodePartition = ({ partition, offset, metadata = null }) => {\n  return new Encoder()\n    .writeInt32(partition)\n    .writeInt64(offset)\n    .writeString(metadata)\n}\n"]},"metadata":{},"sourceType":"script"}