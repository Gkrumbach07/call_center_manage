{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  JoinGroup: apiKey\n} = require('../../apiKeys');\n/**\n * JoinGroup Request (Version: 0) => group_id session_timeout member_id protocol_type [group_protocols]\n *   group_id => STRING\n *   session_timeout => INT32\n *   member_id => STRING\n *   protocol_type => STRING\n *   group_protocols => protocol_name protocol_metadata\n *     protocol_name => STRING\n *     protocol_metadata => BYTES\n */\n\n\nmodule.exports = ({\n  groupId,\n  sessionTimeout,\n  memberId,\n  protocolType,\n  groupProtocols\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'JoinGroup',\n  encode: async () => {\n    return new Encoder().writeString(groupId).writeInt32(sessionTimeout).writeString(memberId).writeString(protocolType).writeArray(groupProtocols.map(encodeGroupProtocols));\n  }\n});\n\nconst encodeGroupProtocols = ({\n  name,\n  metadata = Buffer.alloc(0)\n}) => {\n  return new Encoder().writeString(name).writeBytes(metadata);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/joinGroup/v0/request.js"],"names":["Encoder","require","JoinGroup","apiKey","module","exports","groupId","sessionTimeout","memberId","protocolType","groupProtocols","apiVersion","apiName","encode","writeString","writeInt32","writeArray","map","encodeGroupProtocols","name","metadata","Buffer","alloc","writeBytes"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,SAAS,EAAEC;AAAb,IAAwBF,OAAO,CAAC,eAAD,CAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA,YAArC;AAAmDC,EAAAA;AAAnD,CAAD,MAA0E;AACzFP,EAAAA,MADyF;AAEzFQ,EAAAA,UAAU,EAAE,CAF6E;AAGzFC,EAAAA,OAAO,EAAE,WAHgF;AAIzFC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIb,OAAJ,GACJc,WADI,CACQR,OADR,EAEJS,UAFI,CAEOR,cAFP,EAGJO,WAHI,CAGQN,QAHR,EAIJM,WAJI,CAIQL,YAJR,EAKJO,UALI,CAKON,cAAc,CAACO,GAAf,CAAmBC,oBAAnB,CALP,CAAP;AAMD;AAXwF,CAA1E,CAAjB;;AAcA,MAAMA,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAQ,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb;AAAnB,CAAD,KAA0C;AACrE,SAAO,IAAItB,OAAJ,GAAcc,WAAd,CAA0BK,IAA1B,EAAgCI,UAAhC,CAA2CH,QAA3C,CAAP;AACD,CAFD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { JoinGroup: apiKey } = require('../../apiKeys')\n\n/**\n * JoinGroup Request (Version: 0) => group_id session_timeout member_id protocol_type [group_protocols]\n *   group_id => STRING\n *   session_timeout => INT32\n *   member_id => STRING\n *   protocol_type => STRING\n *   group_protocols => protocol_name protocol_metadata\n *     protocol_name => STRING\n *     protocol_metadata => BYTES\n */\n\nmodule.exports = ({ groupId, sessionTimeout, memberId, protocolType, groupProtocols }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'JoinGroup',\n  encode: async () => {\n    return new Encoder()\n      .writeString(groupId)\n      .writeInt32(sessionTimeout)\n      .writeString(memberId)\n      .writeString(protocolType)\n      .writeArray(groupProtocols.map(encodeGroupProtocols))\n  },\n})\n\nconst encodeGroupProtocols = ({ name, metadata = Buffer.alloc(0) }) => {\n  return new Encoder().writeString(name).writeBytes(metadata)\n}\n"]},"metadata":{},"sourceType":"script"}