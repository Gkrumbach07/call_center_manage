{"ast":null,"code":"const {\n  LEVELS: logLevel\n} = require('./index');\n\nmodule.exports = () => ({\n  namespace,\n  level,\n  label,\n  log\n}) => {\n  const prefix = namespace ? `[${namespace}] ` : '';\n  const message = JSON.stringify(Object.assign({\n    level: label\n  }, log, {\n    message: `${prefix}${log.message}`\n  }));\n\n  switch (level) {\n    case logLevel.INFO:\n      return console.info(message);\n\n    case logLevel.ERROR:\n      return console.error(message);\n\n    case logLevel.WARN:\n      return console.warn(message);\n\n    case logLevel.DEBUG:\n      return console.log(message);\n  }\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/loggers/console.js"],"names":["LEVELS","logLevel","require","module","exports","namespace","level","label","log","prefix","message","JSON","stringify","Object","assign","INFO","console","info","ERROR","error","WARN","warn","DEBUG"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,MAAM,EAAEC;AAAV,IAAuBC,OAAO,CAAC,SAAD,CAApC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAM,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA;AAA3B,CAAD,KAAsC;AAC3D,QAAMC,MAAM,GAAGJ,SAAS,GAAI,IAAGA,SAAU,IAAjB,GAAuB,EAA/C;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,SAAL,CACdC,MAAM,CAACC,MAAP,CAAc;AAAER,IAAAA,KAAK,EAAEC;AAAT,GAAd,EAAgCC,GAAhC,EAAqC;AACnCE,IAAAA,OAAO,EAAG,GAAED,MAAO,GAAED,GAAG,CAACE,OAAQ;AADE,GAArC,CADc,CAAhB;;AAMA,UAAQJ,KAAR;AACE,SAAKL,QAAQ,CAACc,IAAd;AACE,aAAOC,OAAO,CAACC,IAAR,CAAaP,OAAb,CAAP;;AACF,SAAKT,QAAQ,CAACiB,KAAd;AACE,aAAOF,OAAO,CAACG,KAAR,CAAcT,OAAd,CAAP;;AACF,SAAKT,QAAQ,CAACmB,IAAd;AACE,aAAOJ,OAAO,CAACK,IAAR,CAAaX,OAAb,CAAP;;AACF,SAAKT,QAAQ,CAACqB,KAAd;AACE,aAAON,OAAO,CAACR,GAAR,CAAYE,OAAZ,CAAP;AARJ;AAUD,CAlBD","sourcesContent":["const { LEVELS: logLevel } = require('./index')\n\nmodule.exports = () => ({ namespace, level, label, log }) => {\n  const prefix = namespace ? `[${namespace}] ` : ''\n  const message = JSON.stringify(\n    Object.assign({ level: label }, log, {\n      message: `${prefix}${log.message}`,\n    })\n  )\n\n  switch (level) {\n    case logLevel.INFO:\n      return console.info(message)\n    case logLevel.ERROR:\n      return console.error(message)\n    case logLevel.WARN:\n      return console.warn(message)\n    case logLevel.DEBUG:\n      return console.log(message)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}