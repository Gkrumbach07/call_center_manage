{"ast":null,"code":"const Decoder = require('../../../decoder');\n\nconst {\n  failIfVersionNotSupported\n} = require('../../../error');\n\nconst {\n  parse: parseV0\n} = require('../v0/response');\n/**\n * JoinGroup Response (Version: 2) => throttle_time_ms error_code generation_id group_protocol leader_id member_id [members]\n *   throttle_time_ms => INT32\n *   error_code => INT16\n *   generation_id => INT32\n *   group_protocol => STRING\n *   leader_id => STRING\n *   member_id => STRING\n *   members => member_id member_metadata\n *     member_id => STRING\n *     member_metadata => BYTES\n */\n\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData);\n  const throttleTime = decoder.readInt32();\n  const errorCode = decoder.readInt16();\n  failIfVersionNotSupported(errorCode);\n  return {\n    throttleTime,\n    errorCode,\n    generationId: decoder.readInt32(),\n    groupProtocol: decoder.readString(),\n    leaderId: decoder.readString(),\n    memberId: decoder.readString(),\n    members: decoder.readArray(decoder => ({\n      memberId: decoder.readString(),\n      memberMetadata: decoder.readBytes()\n    }))\n  };\n};\n\nmodule.exports = {\n  decode,\n  parse: parseV0\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/joinGroup/v2/response.js"],"names":["Decoder","require","failIfVersionNotSupported","parse","parseV0","decode","rawData","decoder","throttleTime","readInt32","errorCode","readInt16","generationId","groupProtocol","readString","leaderId","memberId","members","readArray","memberMetadata","readBytes","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgCD,OAAO,CAAC,gBAAD,CAA7C;;AACA,MAAM;AAAEE,EAAAA,KAAK,EAAEC;AAAT,IAAqBH,OAAO,CAAC,gBAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAC9B,QAAMC,OAAO,GAAG,IAAIP,OAAJ,CAAYM,OAAZ,CAAhB;AACA,QAAME,YAAY,GAAGD,OAAO,CAACE,SAAR,EAArB;AACA,QAAMC,SAAS,GAAGH,OAAO,CAACI,SAAR,EAAlB;AAEAT,EAAAA,yBAAyB,CAACQ,SAAD,CAAzB;AAEA,SAAO;AACLF,IAAAA,YADK;AAELE,IAAAA,SAFK;AAGLE,IAAAA,YAAY,EAAEL,OAAO,CAACE,SAAR,EAHT;AAILI,IAAAA,aAAa,EAAEN,OAAO,CAACO,UAAR,EAJV;AAKLC,IAAAA,QAAQ,EAAER,OAAO,CAACO,UAAR,EALL;AAMLE,IAAAA,QAAQ,EAAET,OAAO,CAACO,UAAR,EANL;AAOLG,IAAAA,OAAO,EAAEV,OAAO,CAACW,SAAR,CAAkBX,OAAO,KAAK;AACrCS,MAAAA,QAAQ,EAAET,OAAO,CAACO,UAAR,EAD2B;AAErCK,MAAAA,cAAc,EAAEZ,OAAO,CAACa,SAAR;AAFqB,KAAL,CAAzB;AAPJ,GAAP;AAYD,CAnBD;;AAqBAC,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,MADe;AAEfF,EAAAA,KAAK,EAAEC;AAFQ,CAAjB","sourcesContent":["const Decoder = require('../../../decoder')\nconst { failIfVersionNotSupported } = require('../../../error')\nconst { parse: parseV0 } = require('../v0/response')\n\n/**\n * JoinGroup Response (Version: 2) => throttle_time_ms error_code generation_id group_protocol leader_id member_id [members]\n *   throttle_time_ms => INT32\n *   error_code => INT16\n *   generation_id => INT32\n *   group_protocol => STRING\n *   leader_id => STRING\n *   member_id => STRING\n *   members => member_id member_metadata\n *     member_id => STRING\n *     member_metadata => BYTES\n */\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const throttleTime = decoder.readInt32()\n  const errorCode = decoder.readInt16()\n\n  failIfVersionNotSupported(errorCode)\n\n  return {\n    throttleTime,\n    errorCode,\n    generationId: decoder.readInt32(),\n    groupProtocol: decoder.readString(),\n    leaderId: decoder.readString(),\n    memberId: decoder.readString(),\n    members: decoder.readArray(decoder => ({\n      memberId: decoder.readString(),\n      memberMetadata: decoder.readBytes(),\n    })),\n  }\n}\n\nmodule.exports = {\n  decode,\n  parse: parseV0,\n}\n"]},"metadata":{},"sourceType":"script"}