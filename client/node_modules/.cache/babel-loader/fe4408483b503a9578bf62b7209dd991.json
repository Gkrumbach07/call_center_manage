{"ast":null,"code":"const Decoder = require('../../../decoder');\n\nconst {\n  parse: parseV0\n} = require('../v0/response');\n/**\n * Starting in version 1, on quota violation, brokers send out responses before throttling.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-219+-+Improve+quota+communication\n *\n * DeleteTopics Response (Version: 1) => throttle_time_ms [topic_error_codes]\n *   throttle_time_ms => INT32\n *   topic_error_codes => topic error_code\n *     topic => STRING\n *     error_code => INT16\n */\n\n\nconst topicNameComparator = (a, b) => a.topic.localeCompare(b.topic);\n\nconst topicErrors = decoder => ({\n  topic: decoder.readString(),\n  errorCode: decoder.readInt16()\n});\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData);\n  const throttleTime = decoder.readInt32();\n  return {\n    throttleTime: 0,\n    clientSideThrottleTime: throttleTime,\n    topicErrors: decoder.readArray(topicErrors).sort(topicNameComparator)\n  };\n};\n\nmodule.exports = {\n  decode,\n  parse: parseV0\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/deleteTopics/v1/response.js"],"names":["Decoder","require","parse","parseV0","topicNameComparator","a","b","topic","localeCompare","topicErrors","decoder","readString","errorCode","readInt16","decode","rawData","throttleTime","readInt32","clientSideThrottleTime","readArray","sort","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,KAAK,EAAEC;AAAT,IAAqBF,OAAO,CAAC,gBAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMG,mBAAmB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBF,CAAC,CAACC,KAAxB,CAAtC;;AAEA,MAAME,WAAW,GAAGC,OAAO,KAAK;AAC9BH,EAAAA,KAAK,EAAEG,OAAO,CAACC,UAAR,EADuB;AAE9BC,EAAAA,SAAS,EAAEF,OAAO,CAACG,SAAR;AAFmB,CAAL,CAA3B;;AAKA,MAAMC,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAC9B,QAAML,OAAO,GAAG,IAAIV,OAAJ,CAAYe,OAAZ,CAAhB;AACA,QAAMC,YAAY,GAAGN,OAAO,CAACO,SAAR,EAArB;AAEA,SAAO;AACLD,IAAAA,YAAY,EAAE,CADT;AAELE,IAAAA,sBAAsB,EAAEF,YAFnB;AAGLP,IAAAA,WAAW,EAAEC,OAAO,CAACS,SAAR,CAAkBV,WAAlB,EAA+BW,IAA/B,CAAoChB,mBAApC;AAHR,GAAP;AAKD,CATD;;AAWAiB,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA,MADe;AAEfZ,EAAAA,KAAK,EAAEC;AAFQ,CAAjB","sourcesContent":["const Decoder = require('../../../decoder')\nconst { parse: parseV0 } = require('../v0/response')\n\n/**\n * Starting in version 1, on quota violation, brokers send out responses before throttling.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-219+-+Improve+quota+communication\n *\n * DeleteTopics Response (Version: 1) => throttle_time_ms [topic_error_codes]\n *   throttle_time_ms => INT32\n *   topic_error_codes => topic error_code\n *     topic => STRING\n *     error_code => INT16\n */\n\nconst topicNameComparator = (a, b) => a.topic.localeCompare(b.topic)\n\nconst topicErrors = decoder => ({\n  topic: decoder.readString(),\n  errorCode: decoder.readInt16(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const throttleTime = decoder.readInt32()\n\n  return {\n    throttleTime: 0,\n    clientSideThrottleTime: throttleTime,\n    topicErrors: decoder.readArray(topicErrors).sort(topicNameComparator),\n  }\n}\n\nmodule.exports = {\n  decode,\n  parse: parseV0,\n}\n"]},"metadata":{},"sourceType":"script"}