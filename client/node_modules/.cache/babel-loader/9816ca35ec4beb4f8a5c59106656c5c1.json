{"ast":null,"code":"const responseV0 = require('../v0/response');\n/**\n * Starting in version 1, on quota violation, brokers send out responses before throttling.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-219+-+Improve+quota+communication\n *\n * DeleteRecords Response (Version: 1) => throttle_time_ms [topics]\n *  throttle_time_ms => INT32\n *  topics => name [partitions]\n *    name => STRING\n *    partitions => partition_index low_watermark error_code\n *      partition_index => INT32\n *      low_watermark => INT64\n *      error_code => INT16\n */\n\n\nmodule.exports = ({\n  topics\n}) => {\n  const {\n    parse,\n    decode: decodeV0\n  } = responseV0({\n    topics\n  });\n\n  const decode = async rawData => {\n    const decoded = await decodeV0(rawData);\n    return { ...decoded,\n      throttleTime: 0,\n      clientSideThrottleTime: decoded.throttleTime\n    };\n  };\n\n  return {\n    decode,\n    parse\n  };\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/deleteRecords/v1/response.js"],"names":["responseV0","require","module","exports","topics","parse","decode","decodeV0","rawData","decoded","throttleTime","clientSideThrottleTime"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAM,EAAEC;AAAjB,MAA8BP,UAAU,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAA9C;;AAEA,QAAME,MAAM,GAAG,MAAME,OAAN,IAAiB;AAC9B,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACC,OAAD,CAA9B;AAEA,WAAO,EACL,GAAGC,OADE;AAELC,MAAAA,YAAY,EAAE,CAFT;AAGLC,MAAAA,sBAAsB,EAAEF,OAAO,CAACC;AAH3B,KAAP;AAKD,GARD;;AAUA,SAAO;AACLJ,IAAAA,MADK;AAELD,IAAAA;AAFK,GAAP;AAID,CAjBD","sourcesContent":["const responseV0 = require('../v0/response')\n\n/**\n * Starting in version 1, on quota violation, brokers send out responses before throttling.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-219+-+Improve+quota+communication\n *\n * DeleteRecords Response (Version: 1) => throttle_time_ms [topics]\n *  throttle_time_ms => INT32\n *  topics => name [partitions]\n *    name => STRING\n *    partitions => partition_index low_watermark error_code\n *      partition_index => INT32\n *      low_watermark => INT64\n *      error_code => INT16\n */\n\nmodule.exports = ({ topics }) => {\n  const { parse, decode: decodeV0 } = responseV0({ topics })\n\n  const decode = async rawData => {\n    const decoded = await decodeV0(rawData)\n\n    return {\n      ...decoded,\n      throttleTime: 0,\n      clientSideThrottleTime: decoded.throttleTime,\n    }\n  }\n\n  return {\n    decode,\n    parse,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}