{"ast":null,"code":"const ISOLATION_LEVEL = require('../../isolationLevel'); // For normal consumers, use -1\n\n\nconst REPLICA_ID = -1;\nconst NETWORK_DELAY = 100;\n/**\n * The FETCH request can block up to maxWaitTime, which can be bigger than the configured\n * request timeout. It's safer to always use the maxWaitTime\n **/\n\nconst requestTimeout = timeout => Number.isSafeInteger(timeout + NETWORK_DELAY) ? timeout + NETWORK_DELAY : timeout;\n\nconst versions = {\n  0: ({\n    replicaId = REPLICA_ID,\n    maxWaitTime,\n    minBytes,\n    topics\n  }) => {\n    const request = require('./v0/request');\n\n    const response = require('./v0/response');\n\n    return {\n      request: request({\n        replicaId,\n        maxWaitTime,\n        minBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  1: ({\n    replicaId = REPLICA_ID,\n    maxWaitTime,\n    minBytes,\n    topics\n  }) => {\n    const request = require('./v1/request');\n\n    const response = require('./v1/response');\n\n    return {\n      request: request({\n        replicaId,\n        maxWaitTime,\n        minBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  2: ({\n    replicaId = REPLICA_ID,\n    maxWaitTime,\n    minBytes,\n    topics\n  }) => {\n    const request = require('./v2/request');\n\n    const response = require('./v2/response');\n\n    return {\n      request: request({\n        replicaId,\n        maxWaitTime,\n        minBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  3: ({\n    replicaId = REPLICA_ID,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v3/request');\n\n    const response = require('./v3/response');\n\n    return {\n      request: request({\n        replicaId,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  4: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v4/request');\n\n    const response = require('./v4/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  5: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v5/request');\n\n    const response = require('./v5/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  6: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v6/request');\n\n    const response = require('./v6/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  7: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v7/request');\n\n    const response = require('./v7/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  8: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v8/request');\n\n    const response = require('./v8/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  9: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v9/request');\n\n    const response = require('./v9/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  10: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics\n  }) => {\n    const request = require('./v10/request');\n\n    const response = require('./v10/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  },\n  11: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n    rackId\n  }) => {\n    const request = require('./v11/request');\n\n    const response = require('./v11/response');\n\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics,\n        rackId\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime)\n    };\n  }\n};\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({\n    version\n  }) => versions[version]\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/fetch/index.js"],"names":["ISOLATION_LEVEL","require","REPLICA_ID","NETWORK_DELAY","requestTimeout","timeout","Number","isSafeInteger","versions","replicaId","maxWaitTime","minBytes","topics","request","response","maxBytes","isolationLevel","READ_COMMITTED","sessionId","sessionEpoch","forgottenTopics","rackId","module","exports","Object","keys","protocol","version"],"mappings":"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","sourcesContent":["const ISOLATION_LEVEL = require('../../isolationLevel')\n\n// For normal consumers, use -1\nconst REPLICA_ID = -1\nconst NETWORK_DELAY = 100\n\n/**\n * The FETCH request can block up to maxWaitTime, which can be bigger than the configured\n * request timeout. It's safer to always use the maxWaitTime\n **/\nconst requestTimeout = timeout =>\n  Number.isSafeInteger(timeout + NETWORK_DELAY) ? timeout + NETWORK_DELAY : timeout\n\nconst versions = {\n  0: ({ replicaId = REPLICA_ID, maxWaitTime, minBytes, topics }) => {\n    const request = require('./v0/request')\n    const response = require('./v0/response')\n    return {\n      request: request({ replicaId, maxWaitTime, minBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  1: ({ replicaId = REPLICA_ID, maxWaitTime, minBytes, topics }) => {\n    const request = require('./v1/request')\n    const response = require('./v1/response')\n    return {\n      request: request({ replicaId, maxWaitTime, minBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  2: ({ replicaId = REPLICA_ID, maxWaitTime, minBytes, topics }) => {\n    const request = require('./v2/request')\n    const response = require('./v2/response')\n    return {\n      request: request({ replicaId, maxWaitTime, minBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  3: ({ replicaId = REPLICA_ID, maxWaitTime, minBytes, maxBytes, topics }) => {\n    const request = require('./v3/request')\n    const response = require('./v3/response')\n    return {\n      request: request({ replicaId, maxWaitTime, minBytes, maxBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  4: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v4/request')\n    const response = require('./v4/response')\n    return {\n      request: request({ replicaId, isolationLevel, maxWaitTime, minBytes, maxBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  5: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v5/request')\n    const response = require('./v5/response')\n    return {\n      request: request({ replicaId, isolationLevel, maxWaitTime, minBytes, maxBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  6: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v6/request')\n    const response = require('./v6/response')\n    return {\n      request: request({ replicaId, isolationLevel, maxWaitTime, minBytes, maxBytes, topics }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  7: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v7/request')\n    const response = require('./v7/response')\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics,\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  8: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v8/request')\n    const response = require('./v8/response')\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics,\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  9: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v9/request')\n    const response = require('./v9/response')\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics,\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  10: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n  }) => {\n    const request = require('./v10/request')\n    const response = require('./v10/response')\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics,\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n  11: ({\n    replicaId = REPLICA_ID,\n    isolationLevel = ISOLATION_LEVEL.READ_COMMITTED,\n    sessionId = 0,\n    sessionEpoch = -1,\n    forgottenTopics = [],\n    maxWaitTime,\n    minBytes,\n    maxBytes,\n    topics,\n    rackId,\n  }) => {\n    const request = require('./v11/request')\n    const response = require('./v11/response')\n    return {\n      request: request({\n        replicaId,\n        isolationLevel,\n        sessionId,\n        sessionEpoch,\n        forgottenTopics,\n        maxWaitTime,\n        minBytes,\n        maxBytes,\n        topics,\n        rackId,\n      }),\n      response,\n      requestTimeout: requestTimeout(maxWaitTime),\n    }\n  },\n}\n\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({ version }) => versions[version],\n}\n"]},"metadata":{},"sourceType":"script"}