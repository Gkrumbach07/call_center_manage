{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  EndTxn: apiKey\n} = require('../../apiKeys');\n/**\n * EndTxn Request (Version: 0) => transactional_id producer_id producer_epoch transaction_result\n *   transactional_id => STRING\n *   producer_id => INT64\n *   producer_epoch => INT16\n *   transaction_result => BOOLEAN\n */\n\n\nmodule.exports = ({\n  transactionalId,\n  producerId,\n  producerEpoch,\n  transactionResult\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'EndTxn',\n  encode: async () => {\n    return new Encoder().writeString(transactionalId).writeInt64(producerId).writeInt16(producerEpoch).writeBoolean(transactionResult);\n  }\n});","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/endTxn/v0/request.js"],"names":["Encoder","require","EndTxn","apiKey","module","exports","transactionalId","producerId","producerEpoch","transactionResult","apiVersion","apiName","encode","writeString","writeInt64","writeInt16","writeBoolean"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,MAAM,EAAEC;AAAV,IAAqBF,OAAO,CAAC,eAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA,aAA/B;AAA8CC,EAAAA;AAA9C,CAAD,MAAwE;AACvFN,EAAAA,MADuF;AAEvFO,EAAAA,UAAU,EAAE,CAF2E;AAGvFC,EAAAA,OAAO,EAAE,QAH8E;AAIvFC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIZ,OAAJ,GACJa,WADI,CACQP,eADR,EAEJQ,UAFI,CAEOP,UAFP,EAGJQ,UAHI,CAGOP,aAHP,EAIJQ,YAJI,CAISP,iBAJT,CAAP;AAKD;AAVsF,CAAxE,CAAjB","sourcesContent":["const Encoder = require('../../../encoder')\nconst { EndTxn: apiKey } = require('../../apiKeys')\n\n/**\n * EndTxn Request (Version: 0) => transactional_id producer_id producer_epoch transaction_result\n *   transactional_id => STRING\n *   producer_id => INT64\n *   producer_epoch => INT16\n *   transaction_result => BOOLEAN\n */\n\nmodule.exports = ({ transactionalId, producerId, producerEpoch, transactionResult }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'EndTxn',\n  encode: async () => {\n    return new Encoder()\n      .writeString(transactionalId)\n      .writeInt64(producerId)\n      .writeInt16(producerEpoch)\n      .writeBoolean(transactionResult)\n  },\n})\n"]},"metadata":{},"sourceType":"script"}