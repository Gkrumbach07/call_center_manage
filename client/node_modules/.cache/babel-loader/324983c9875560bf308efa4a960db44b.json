{"ast":null,"code":"const Encoder = require('../../../encoder');\n\nconst {\n  AlterConfigs: apiKey\n} = require('../../apiKeys');\n/**\n * AlterConfigs Request (Version: 0) => [resources] validate_only\n *   resources => resource_type resource_name [config_entries]\n *     resource_type => INT8\n *     resource_name => STRING\n *     config_entries => config_name config_value\n *       config_name => STRING\n *       config_value => NULLABLE_STRING\n *   validate_only => BOOLEAN\n */\n\n/**\n * @param {Array} resources An array of resources to change\n * @param {boolean} [validateOnly=false]\n */\n\n\nmodule.exports = ({\n  resources,\n  validateOnly = false\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'AlterConfigs',\n  encode: async () => {\n    return new Encoder().writeArray(resources.map(encodeResource)).writeBoolean(validateOnly);\n  }\n});\n\nconst encodeResource = ({\n  type,\n  name,\n  configEntries\n}) => {\n  return new Encoder().writeInt8(type).writeString(name).writeArray(configEntries.map(encodeConfigEntries));\n};\n\nconst encodeConfigEntries = ({\n  name,\n  value\n}) => {\n  return new Encoder().writeString(name).writeString(value);\n};","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/call-center-manage/node_modules/kafkajs/src/protocol/requests/alterConfigs/v0/request.js"],"names":["Encoder","require","AlterConfigs","apiKey","module","exports","resources","validateOnly","apiVersion","apiName","encode","writeArray","map","encodeResource","writeBoolean","type","name","configEntries","writeInt8","writeString","encodeConfigEntries","value"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,YAAY,EAAEC;AAAhB,IAA2BF,OAAO,CAAC,eAAD,CAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAY,GAAG;AAA5B,CAAD,MAA0C;AACzDJ,EAAAA,MADyD;AAEzDK,EAAAA,UAAU,EAAE,CAF6C;AAGzDC,EAAAA,OAAO,EAAE,cAHgD;AAIzDC,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,IAAIV,OAAJ,GAAcW,UAAd,CAAyBL,SAAS,CAACM,GAAV,CAAcC,cAAd,CAAzB,EAAwDC,YAAxD,CAAqEP,YAArE,CAAP;AACD;AANwD,CAA1C,CAAjB;;AASA,MAAMM,cAAc,GAAG,CAAC;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AACxD,SAAO,IAAIjB,OAAJ,GACJkB,SADI,CACMH,IADN,EAEJI,WAFI,CAEQH,IAFR,EAGJL,UAHI,CAGOM,aAAa,CAACL,GAAd,CAAkBQ,mBAAlB,CAHP,CAAP;AAID,CALD;;AAOA,MAAMA,mBAAmB,GAAG,CAAC;AAAEJ,EAAAA,IAAF;AAAQK,EAAAA;AAAR,CAAD,KAAqB;AAC/C,SAAO,IAAIrB,OAAJ,GAAcmB,WAAd,CAA0BH,IAA1B,EAAgCG,WAAhC,CAA4CE,KAA5C,CAAP;AACD,CAFD","sourcesContent":["const Encoder = require('../../../encoder')\nconst { AlterConfigs: apiKey } = require('../../apiKeys')\n\n/**\n * AlterConfigs Request (Version: 0) => [resources] validate_only\n *   resources => resource_type resource_name [config_entries]\n *     resource_type => INT8\n *     resource_name => STRING\n *     config_entries => config_name config_value\n *       config_name => STRING\n *       config_value => NULLABLE_STRING\n *   validate_only => BOOLEAN\n */\n\n/**\n * @param {Array} resources An array of resources to change\n * @param {boolean} [validateOnly=false]\n */\nmodule.exports = ({ resources, validateOnly = false }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'AlterConfigs',\n  encode: async () => {\n    return new Encoder().writeArray(resources.map(encodeResource)).writeBoolean(validateOnly)\n  },\n})\n\nconst encodeResource = ({ type, name, configEntries }) => {\n  return new Encoder()\n    .writeInt8(type)\n    .writeString(name)\n    .writeArray(configEntries.map(encodeConfigEntries))\n}\n\nconst encodeConfigEntries = ({ name, value }) => {\n  return new Encoder().writeString(name).writeString(value)\n}\n"]},"metadata":{},"sourceType":"script"}